// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  levels Level[]
  replays Replay[]
  collections Collection[]
  collectionReplays CollectionReplay[]
}

model Level {
  id        Int     @id @default(autoincrement())
  title     String
  setupInstructions Json
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  replays   Replay[]
  collections LevelsOnCollection[]
}

model Replay {
  id        Int     @id @default(autoincrement())
  replayInstructions Json
  length    Int
  createdAt DateTime    @default(now()) @map(name: "created_at")
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  level     Level   @relation(fields: [levelId], references: [id])
  levelId   Int
}

model Collection {
  id        Int     @id @default(autoincrement())
  title     String
  levels    LevelsOnCollection[]
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  collectionReplays CollectionReplay[]
}

model LevelsOnCollection {
  level     Level  @relation(fields: [levelId], references: [id])
  levelId   Int
  collection     Collection  @relation(fields: [collectionId], references: [id])
  collectionId   Int
  assignedAt DateTime @default(now())

  @@id([levelId, collectionId])
}

model CollectionReplay {
  id        Int     @id @default(autoincrement())
  deaths    Int
  collection Collection  @relation(fields: [collectionId], references: [id])
  collectionId  Int
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
}